//====================================================================/
//                                                                    /
// artisoc                                                            /
//                                                                    /
//====================================================================/

Version = 4.0;



//-------------------------------------------------------
// Component Tree
//-------------------------------------------------------
UNIVERSE {
    Space Road(0,0),Square_2D(3, 300, Loop, North, 1, !Map_3D){
        AgtType Car(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim MaxSpeed(0, 0) As Double = (0.0);
            Dim Speed(0, 0) As Double = (0.0);
            Dim Target(0, 0) As Double = (0.0);
            Dim ASocial(0, 0) As Boolean = (0);
            Dim Accel(0, 0) As Double = (0.0);
            Dim Allowance(0, 0) As Double = (0.0);
            Dim Status(0, 0) As Integer = (0);
            Dim Patience(0, 0) As Integer = (0);
            Dim LaneChangeCount(0, 0) As Integer = (0);
            Dim Startstep(0, 0) As Integer = (0);
            Dim TravelTime(0, 0) As Integer = (0);
            Dim PrevY(0, 0) As Integer = (0);
            Dim Recovering(0, 0) As Integer = (0);
            Dim RecoveryTime(0, 0) As Integer = (0);
            Dim BaseAccel(0, 0) As Integer = (0);
        }
        AgtType Stoplight(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim Color(0, 0) As Integer = (0);
            Dim Activetime(0, 0) As Double = (0.0);
            Dim State(0, 0) As Double = (0.0);
        }
    }
    Dim StartingCars(0, 0) As Integer = (0);
    Dim Scaling(0, 0) As Double = (0.0);
    Dim SlowedCars(0, 0) As Integer = (0);
    Dim Targets(0, 0) As Boolean = (0);
    Dim ASocialrate(0, 0) As Double = (0.0);
    Dim Slowdown(0, 0) As Double = (0.0);
    Dim FinishedCars(0, 0) As Integer = (0);
    Dim AvgTraveltime(0, 0) As Double = (0.0);
    Dim LatestTravelTime(0, 0) As Integer = (0);
    Dim AvgLaneChanges(0, 0) As Double = (0.0);
    Dim LatestLaneChanges(0, 0) As Integer = (0);
    Dim AvgLaneChangesASocial(0, 0) As Double = (0.0);
    Dim LatestLaneChangesASocial(0, 0) As Integer = (0);
    Dim Newstart(0, 0) As Integer = (0);
    Dim Datapoints(0, 0) As Integer = (0);
    Dim ASocialcountoverride(0, 0) As Integer = (0);
    Dim ASocialcars(0, 0) As Integer = (0);
    Dim StopsGap(0, 0) As Integer = (0);
    Dim LightPeriod(0, 0) As Double = (0.0);
    Dim RandomSpeeds(0, 0) As Boolean = (0);
    Dim IdealSpeed(0, 0) As Double = (0.0);
    Dim NumWaves(0, 0) As Integer = (0);
    Dim LightActiveTime(0, 0) As Double = (0.0);
    Dim StartingPatience(0, 0) As Integer = (0);
    Dim RecordData(0, 0) As Boolean = (0);
    Dim RandomRecoveryTime(0, 0) As Boolean = (0);
}


//-------------------------------------------------------
// Agent Variable Initial Data
//-------------------------------------------------------
Initial_Value {
    UNIVERSE.STARTINGCARS = 1(50);
    UNIVERSE.SCALING = 1(18.0);
    UNIVERSE.TARGETS = 1(0);
    UNIVERSE.ASOCIALRATE = 1(0.0);
    UNIVERSE.SLOWDOWN = 1(0.0);
    UNIVERSE.DATAPOINTS = 1(1000);
    UNIVERSE.ASOCIALCOUNTOVERRIDE = 1(0);
    UNIVERSE.STOPSGAP = 1(30);
    UNIVERSE.LIGHTPERIOD = 1(100.0);
    UNIVERSE.RANDOMSPEEDS = 1(1);
    UNIVERSE.IDEALSPEED = 1(60.0);
    UNIVERSE.NUMWAVES = 1(2);
    UNIVERSE.LIGHTACTIVETIME = 1(0.5);
    UNIVERSE.STARTINGPATIENCE = 1(0);
    UNIVERSE.RECORDDATA = 1(1);
}


//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE
Univ_Init{
if Universe.RecordData then
	initialize(10, 0.0)
else
	initialize(Universe.StartingCars, Universe.ASocialrate)
end if
}

Univ_Step_Begin{
Universe.SlowedCars = 0
}

Univ_Step_End{
dim newCar as agt
dim aCar as agt
dim i as integer
dim BottomCars as agtset
dim allcars as agtset

//----------------------------------CAR REGENERATION BLOCK-----------------------------
if CountAgt(Universe.Road.Car) < Universe.StartingCars then
	i = Int(Rnd() * 3)
	MakeAllAgtSetAroundPositionCell(BottomCars, Universe.Road, i, 0, 0, 0)
	if countagtset(BottomCars) == 0 then
		newCar = CreateAgt(Universe.Road.Car)
		newCar.X = i
	end if
end if


//----------------------UNIVERSE TERMINATION BLOCK--------------------------------------
if Universe.RecordData then
if Universe.FinishedCars > Universe.Datapoints then
	MakeAgtSet(allcars, Universe.Road.Car)
	if countAgtSet(allcars) <> 0 then
		for each aCar in allcars
			KillAgt(aCar)
		next aCar
	end if

	Universe.FinishedCars = 0

	if Universe.ASocialcountoverride == 0 then
		if Universe.ASocialrate >= 0.999 then
			if Universe.StartingCars == 200 then
				ExitSimulationMsgLn("ALL Completed")
			else
				Universe.StartingCars = Universe.StartingCars + 10
				Universe.ASocialrate = 0			
			end if
		else
			Universe.ASocialrate = Universe.ASocialrate + 0.1
		end if
	else
		if Universe.StartingCars == 200 then
			ExitSimulationMsgLn("ALL Completed with exactly " & Universe.ASocialcountoverride & " ASocial car(s)")
		else
			Universe.StartingCars = Universe.StartingCars + 10
		end if
	end if

	if Universe.ASocialcountoverride == 0 then
		println(Universe.StartingCars & " starting cars, " & Universe.ASocialrate & " ASocialness Done")
	else
		println(Universe.StartingCars & " starting cars, exactly " & Universe.ASocialcountoverride & " ASocial car(s) Done")
	end if
	initialize(Universe.StartingCars, Universe.ASocialrate)
end if
end if
}

Univ_Finish{

}



sub initialize(startingcars as integer, ASocialrate as double) {
Dim i as integer
Dim j as integer
Dim cars as agtset
Dim stop as agt

Universe.StartingCars = startingcars
Universe.ASocialrate = ASocialrate

Universe.ASocialcars = 0 

for i=0 to Universe.StartingCars - 1
	CreateAgt(Universe.Road.Car)
next i

//--------------------------------------------Stoplight Creation Block------------------------------------
Universe.LightPeriod = GetheightSpace(Universe.Road) / ((Universe.IdealSpeed / Universe.Scaling) * Universe.NumWaves)

for i = 1 to Round(GetHeightSpace(Universe.Road) / Universe.StopsGap)
	for j = 0 to 2
		stop = CreateAgt(Universe.Road.Stoplight)
		stop.X = j
		stop.Y = (i * Universe.StopsGap) -1
		stop.State = (stop.Y  / (GetHeightSpace(Universe.Road)/ CDbl(Universe.NumWaves))) mod 1.0
	next j
next i


MakeAgtSet(cars, Universe.Road.Car)
RandomPutAgtSetCell(cars, False)

Universe.FinishedCars = 0

if Universe.RecordData then
	OpenFileCSV("data\\output_" & Universe.StartingCars & "asocial" & Universe.ASocialrate &  ", " &Universe.Datapoints&"points.csv", 1, 2)	

	WriteFileCSV(1, "Travel Time", False)
	WriteFileCSV(1, "Max Speed", False)
	WriteFileCSV(1, "Lane Changes", False)
	WriteFileCSV(1, "ASocial", False)
	WriteFileCSV(1, "Number of Waves", False)
	WriteFileCSV(1, "Spacing Between Lights", False)
	WriteFileCSV(1, "Stoplight Active Time", False)

	WriteFileCSV(1, "Total Cars", False)
	WriteFileCSV(1, "ASocial Rate", True)	

	CloseFileCSV(1)
end if

Universe.Newstart = GetCountStep()
}
#end_rule UNIVERSE




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.ROAD.CAR
Agt_Init{
My.X = int(Rnd() * GetWidthSpaceOwn())
My.Y = 0
My.Direction = 90
My.Target = Int(Rnd() * 3)

My.patience = Universe.StartingPatience	

//Speeds are all expressed in km/hr. Universe.Scaling converts speeds to spaces/tick
if Universe.RandomSpeeds then
	My.MaxSpeed = NormInv(Rnd(), Universe.IdealSpeed, 5)
else
	My.MaxSpeed = Universe.IdealSpeed
end if

My.Speed = My.MaxSpeed
My.BaseAccel = (Rnd() * 4) + 1
My.Accel = My.BaseAccel

// Recovery time is the number of seconds a car will have a reduced acceleration value.
if Universe.RandomRecoveryTime then
	My.RecoveryTime = int(Rnd() * 10)
else
	My.RecoveryTime = 5
end if

//A car is in the "recovering" state when my.recovering != my.RecoveryTime
My.Recovering = My.RecoveryTime

My.LaneChangeCount = 0

My.Startstep = GetCountStep()

if Universe.ASocialcountoverride == 0 then
	if Rnd() < Universe.ASocialrate then
		My.ASocial = True
		My.Status = Color_black
	else
		My.ASocial = False
		My.Status = Color_green
	end if
	
elseif Universe.ASocialcars < Universe.ASocialcountoverride then
	My.ASocial = True
	My.Status = color_black
	Universe.ASocialcars = Universe.ASocialcars + 1
	
else
	My.ASocial = False
	My.Status = Color_green
end if
}

Agt_Step{

dim Cars as agtset
dim aCar as agt
dim Lights as agtset
dim Light as agt
dim NearDistL as double
dim NearDistM as double
dim NearDistR as double
dim BackDistL as double
dim BackDistR as double
dim BottomCars as agtset
dim pressure as double
dim traveltime as integer
dim nextred as integer

nextred = 100

//Acccelerate. If recovering from a previous deceleration, then acelerate carefully.
if My.Recovering < My.RecoveryTime then
	My.Accel = My.BaseAccel * 0.5
	My.Recovering = My.Recovering +1
else
	My.Accel = My.BaseAccel
end if

if My.Speed < My.MaxSpeed then
	My.Speed = My.Speed + My.Accel
	if My.Speed > My.MaxSpeed then
		My.Speed = My.MaxSpeed
	end if
end if

//look ahead

//-------------------------------LOOK AT STREET LIGHTS HERE-------------------------------------------------
nextred = Universe.StopsGap - (My.Y mod Universe.StopsGap)

MakeOneAgtSetAroundPositionCell(Lights, Universe.Road, 1, My.Y + nextred, 0, 2, Universe.Road.Stoplight)
Light = GetAgt(Lights, 0)
if Light.Color == Color_Green then
	nextred = 100
end if

//initialize nearest distances (make the max = distance to next traffic light)
NearDistM = nextred
if My.X == 0 then
	NearDistL = 0
	NearDistR = nextred
	BackDistL = 0
	BackdistR = 100
elseif My.X == 2 then
	NearDistR = 0
	NearDistL = nextred
	BackDistL = 100
	BackdistR = 0
else
	NearDistR = nextred
	NearDistL = nextred
	BackDistL = 100
	BackdistR = 100
end if


//-------------------------------------------LOOK AHEAD---------------------------------------------
MakeOneAgtSetAroundPositionCell(Cars, Universe.Road, My.X, My.Y + 3, 0, 2, Universe.Road.Car)
If countagtset(Cars) <> 0 then
	For each aCar in Cars//check cars ahead
		
		//car in front
		if aCar.X == My.X and aCar.Y >= My.Y and aCar.Y - My.Y < NearDistM then
			NearDistM = aCar.Y - My.Y
		elseif aCar.X == My.X and aCar.Y + GetHeightSpace(Universe.Road) >= My.Y and aCar.Y + GetHeightSpace(Universe.Road) - My.Y < NearDistM then
			NearDistM = aCar.Y + GetHeightSpace(Universe.Road) - My.Y
		
		//car to the right
		elseif aCar.X == My.X + 1 and aCar.Y >= My.Y and aCar.Y - My.Y < NearDistR then
			NearDistR = aCar.Y - My.Y
		elseif aCar.X == My.X + 1 and aCar.Y + GetHeightSpace(Universe.Road) >= My.Y and aCar.Y + GetHeightSpace(Universe.Road) - My.Y < NearDistR then
			NearDistR = aCar.Y + GetHeightSpace(Universe.Road) - My.Y
		
		//car to the left
		elseif aCar.X == My.X - 1 and aCar.Y >= My.Y and aCar.Y - My.Y < NearDistL then
			NearDistL = aCar.Y - My.Y
		elseif aCar.X == My.X - 1 and aCar.Y + GetHeightSpace(Universe.Road) >= My.Y and aCar.Y + GetHeightSpace(Universe.Road) - My.Y < NearDistL then
			NearDistL = aCar.Y + GetHeightSpace(Universe.Road) - My.Y
		
		end if
	next aCar
end if

//------------------------------------------------LOOK BEHIND----------------------------------------
MakeOneAgtSetAroundPositionCell(Cars, Universe.Road, My.X, My.Y - 3, 0, 3, Universe.Road.Car)
If countagtset(Cars) <> 0 then
	For each aCar in Cars//check cars behind
	
		//car to the right
		if aCar.X == My.X + 1 and aCar.Y <= My.Y and Abs(aCar.Y - My.Y) < BackDistR then
			BackDistR = Abs(aCar.Y - My.Y)
		elseif aCar.X == My.X + 1 and aCar.Y <= My.Y  + GetHeightSpace(Universe.Road) and My.Y + GetHeightSpace(Universe.Road) - aCar.Y < BackDistR then
			BackDistR = My.Y + GetHeightSpace(Universe.Road) - aCar.Y  
		
		//car to the left
		elseif aCar.X == My.X - 1 and aCar.Y <= My.Y and Abs(aCar.Y - My.Y) < NearDistL then
			BackDistL = Abs(aCar.Y - My.Y)
		elseif aCar.X == My.X - 1 and aCar.Y <= My.Y  + GetHeightSpace(Universe.Road) and My.Y + GetHeightSpace(Universe.Road) - aCar.Y  < BackDistL then
			BackDistL = My.Y + GetHeightSpace(Universe.Road) - aCar.Y  
		
		end if
	next aCar
end if


//----------- LANE CHANGING BLOCK ----------------
if My.Patience <= 0 and My.Speed > 20 then //if out of patience and in motion

		//change lanes to the most open
		if NearDistR > NearDistM then
			if NearDistR > NearDistL then
				//check behind before turning if Social
				
				//if Social and no space on the right, go straight
				if (not My.ASocial) and BackDistR < 1 + (My.Speed/ Universe.Scaling) * 1.5 then
					driveforward(NearDistM) 
					
				else
					//If ASocial or there IS space on the right, go right
					//My.Speed = My.Speed * Universe.Slowdown
					My.X = My.X + 1
					My.LaneChangeCount = My.LaneChangeCount + 1
					driveforward(NearDistR)
					My.patience = Universe.StartingPatience
				end if
			else
			
				//if Social and no space on the left, go straight
				if (not My.ASocial) and BackDistL < 1 + (My.Speed/ Universe.Scaling) * 1.5 then
					driveforward(NearDistM)
				else
					//If ASocial or there IS space on the left, go left
					//My.Speed = My.Speed * Universe.Slowdown
					My.X = My.X - 1
					My.LaneChangeCount = My.LaneChangeCount + 1
					driveforward(NearDistL)
					My.patience = Universe.StartingPatience
				end if
			end if
		elseif NearDistM > NearDistL then
			//go straight
			driveforward(NearDistM)
		else
			//if Social and no space on the left, go straight
			if (not My.ASocial) and BackDistL < 1 + (My.Speed/ Universe.Scaling) then
				driveforward(NearDistM)
			else
				//If ASocial or there IS space on the left, go left
				//go left
				//My.Speed = My.Speed * Universe.Slowdown
				My.X = My.X - 1
				My.LaneChangeCount = My.LaneChangeCount + 1
				driveforward(NearDistL)
				My.patience = Universe.StartingPatience
			end if
		end if

else//if still patient or target lanes are blocked
	driveforward(NearDistM)
end if

}


sub driveforward(headway as double) {
dim overflow as double

My.Allowance = 1 + (My.Speed/Universe.Scaling) * 1

If headway < My.Allowance then
	My.Speed = (headway - 1) * Universe.Scaling * 0.6
	My.Status = Color_red
	Universe.SlowedCars = Universe.SlowedCars + 1
	My.patience = My.patience - 1 
	My.Recovering = 0
		
else
	if My.ASocial then
		My.Status = Color_black
	else
		My.Status = Color_green
	end if
end if
	
if My.Speed < 0 then
	My.Speed = 0
end if
/*	
if My.patience > 0 then
	My.patience = My.patience - 1
end if
*/

Forward(My.Speed / Universe.Scaling)

if My.Y < My.PrevY then
	if Universe.RecordData then
		report()
	else
		My.TravelTime = GetCountStep() -My.Startstep
		My.Startstep = GetCountStep()
	end if
end if

My.PrevY = My.Y
}

sub report(){

	My.traveltime = GetCountStep() - My.Startstep

	if My.Traveltime >=  (Universe.LightPeriod * Universe.NumWaves) * 0.7 then
		if GetCountStep() - Universe.Newstart >= 500 then
			Universe.AvgTraveltime = ((Universe.AvgTraveltime * Universe.FinishedCars) + My.TravelTime)/(Universe.FinishedCars + 1)		
			Universe.LatestTravelTime = My.TravelTime
	
			if My.ASocial then 
				//Universe.AvgLaneChangesASocial = ((Universe.AvgLaneChangesASocial * Universe.FinishedCars) + My.LaneChangeCount)/(Universe.FinishedCars +1)
				Universe.LatestLaneChangesASocial = My.LaneChangeCount
			else
				//Universe.AvgLaneChanges = ((Universe.AvgLaneChanges * Universe.FinishedCars) + My.LaneChangeCount)/(Universe.FinishedCars +1)
				Universe.LatestLaneChanges = My.LaneChangeCount
			end if
 	//------------------------------------------------REPORT DATA------------------------------------
			OpenFileCSV("data\\output_" & Universe.StartingCars & "asocial" & Universe.ASocialrate &  ", " &Universe.Datapoints&"points.csv", 1, 3)	
			
			WriteFileCSV(1, My.TravelTime, False)
			WriteFileCSV(1, My.MaxSpeed, False)
			WriteFileCSV(1, My.LaneChangeCount, False)
			WriteFileCSV(1, My.ASocial, False)
			WriteFileCSV(1, Universe.NumWaves, False)	
			WriteFileCSV(1, Universe.StopsGap, False)
			WriteFileCSV(1, Universe.LightActiveTime, False)
			WriteFileCSV(1, Universe.StartingCars, False)
			WriteFileCSV(1, Universe.ASocialrate, True)
			
			CloseFileCSV(1)
	
			Universe.FinishedCars = Universe.FinishedCars + 1
		end if

		My.Startstep = GetCountStep()
		My.LaneChangeCount = 0
		My.Patience = Universe.StartingPatience
	end if
}
#end_rule UNIVERSE.ROAD.CAR




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.ROAD.STOPLIGHT
Agt_Init{

if My.State >= Universe.LightActiveTime then
	My.Color = Color_red
else
	My.Color = Color_Green
end if
}

Agt_Step{
My.State = My.State - (1 / Universe.LightPeriod)

if My.State <=  0 then
	My.Color = COLOR_Red
	My.State = 1
elseif My.State <= Universe.LightActiveTime then
	My.Color = Color_Green
else
	My.Color = Color_Red
end if
}
#end_rule UNIVERSE.ROAD.STOPLIGHT




//-------------------------------------------------------
// Simulation Definition Division
//-------------------------------------------------------
Single_Simulation {
    Step_Max = 0;
    Time_Max = 0;
    End_Condition = "";
    Exec_Wait = 0;
    Exec_Wait_Max = 0;
    Random_Generator = Java_Standard;
    Exec_Order = Random;
    Exec_Order_Random_First_Step_Only = No;
    Random_Seed = 0;
    Redraw_Timing = Step;
    Redraw_Interval = 1;
    Garbage_Interval = 0;
}


//-------------------------------------------------------
// Simulation Loop Definition Division
//-------------------------------------------------------
Repeat_Simulation {
    Value_Change = None;
    Initial_Value_Change_None {
        Repeat_Max = 1;
    }
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "Universe.Road";
    Map_Name = "Road 1";
    Title = "Road 1";
    Disable = No;
    Background_Color = 255, 255, 255;
    Position_x = 816;
    Position_y = 6;
    Size_x = 129;
    Size_y = 916;
    Map_Cell_Size = 2;
    Remarks = No;
    Legend_Pos = Top;
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    FastDraw = Yes;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Axis_Label = "", "";
    Draw_Range = 0, 0, 3, 100;
    Ruled_Line = No;
    Text_Display = No;
    Text_Display_Variable_Name = "";
    Chess_Type_Display_Position = Yes;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = No;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "";
    Origin_Position = 2;
    Output_Group_Name = "";
    Output {
        Map_Element_Name = "Car";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Road.Car";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Road.Car.Status";
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Road.Car.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Road.Car.ID";
    }
    Output {
        Map_Element_Name = "Stoplight";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Road.Stoplight";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Road.Stoplight.Color";
        Marker_Id = 2;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Road.Stoplight.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Road.Stoplight.ID";
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "Number of cars";
    Title = "Cars";
    Disable = Yes;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = No;
    Position_x = 162;
    Position_y = 450;
    Size_x = 500;
    Size_y = 300;
    Map_Cell_Size = -1;
    Axis_Label = "", "";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "Car Count";
        Line_Color = 255, 0, 0;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "CountAgt(Universe.Road.Car)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 255, 0);
    }
    Output {
        Graph_Element_Name = "Slowed Cars";
        Line_Color = 0, 0, 255;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.SlowedCars";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (255, 0, 0);
    }
    Output {
        Graph_Element_Name = "Max Cars";
        Line_Color = 255, 0, 0;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.StartingCars";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (51, 51, 255);
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "Travel Time";
    Title = "Travel Time";
    Disable = Yes;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = No;
    Position_x = 1150;
    Position_y = 556;
    Size_x = 500;
    Size_y = 308;
    Map_Cell_Size = -1;
    Axis_Label = "", "";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "Average Travel Time";
        Line_Color = 0, 255, 0;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.AvgTraveltime";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 102, 255);
    }
    Output {
        Graph_Element_Name = "Latest Travel Time";
        Line_Color = 255, 0, 0;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.LatestTravelTime";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 255, 0);
    }
}


//-------------------------------------------------------
// Numeric Data Window Output Definition Division
//-------------------------------------------------------
Numeric_Output {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Position_x = 140;
    Position_y = 122;
    Size_x = 500;
    Size_y = 300;
    Map_Cell_Size = -1;
    Numeric_Name = "Average Values";
    Title = "Average Values";
    Disable = Yes;
    Output_Group_Name = "";
    OUTPUT {
        Output_Element_Name = "Average Travel Time";
        Figures = 2;
        Format_Id = 0;
        Output_Expression = "Universe.AvgTraveltime";
    }
    OUTPUT {
        Output_Element_Name = "Average Lane Changes";
        Figures = 2;
        Format_Id = 0;
        Output_Expression = "Universe.AvgLaneChanges";
    }
    OUTPUT {
        Output_Element_Name = "Average Lane Changes (Selfish)";
        Figures = 3;
        Format_Id = 0;
        Output_Expression = "Universe.AvgLaneChangesASocial";
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "Lane Changes";
    Title = "Lane Changes";
    Disable = Yes;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = No;
    Position_x = 1126;
    Position_y = 100;
    Size_x = 500;
    Size_y = 300;
    Map_Cell_Size = -1;
    Axis_Label = "", "";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "Average Lane Changes";
        Line_Color = 255, 0, 255;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.AvgLaneChanges";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 0, 255);
    }
    Output {
        Graph_Element_Name = "Latest Lane Changes";
        Line_Color = 0, 255, 255;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.LatestLaneChanges";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 255, 0);
    }
    Output {
        Graph_Element_Name = "Average Lane Changes (Selfish)";
        Line_Color = 128, 128, 128;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.AvgLaneChangesASocial";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (255, 0, 51);
    }
    Output {
        Graph_Element_Name = "Latest Lane Changes (Selfish)";
        Line_Color = 255, 0, 0;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.LatestLaneChangesASocial";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (204, 0, 204);
    }
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "Universe.Road";
    Map_Name = "Road 2";
    Title = "Road 2";
    Disable = No;
    Background_Color = 255, 255, 255;
    Position_x = 986;
    Position_y = 6;
    Size_x = 129;
    Size_y = 916;
    Map_Cell_Size = 2;
    Remarks = No;
    Legend_Pos = Top;
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    FastDraw = Yes;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Axis_Label = "", "";
    Draw_Range = 0, 101, 3, 200;
    Ruled_Line = No;
    Text_Display = No;
    Text_Display_Variable_Name = "";
    Chess_Type_Display_Position = Yes;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = No;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "";
    Origin_Position = 2;
    Output_Group_Name = "";
    Output {
        Map_Element_Name = "Car";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Road.Car";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Road.Car.Status";
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Road.Car.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Road.Car.ID";
    }
    Output {
        Map_Element_Name = "Stoplight";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Road.Stoplight";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Road.Stoplight.Color";
        Marker_Id = 2;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Road.Stoplight.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Road.Stoplight.ID";
    }
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "Universe.Road";
    Map_Name = "Road 3";
    Title = "Road 3";
    Disable = No;
    Background_Color = 255, 255, 255;
    Position_x = 1154;
    Position_y = 4;
    Size_x = 129;
    Size_y = 916;
    Map_Cell_Size = 2;
    Remarks = No;
    Legend_Pos = Top;
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    FastDraw = Yes;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Axis_Label = "", "";
    Draw_Range = 0, 201, 3, 300;
    Ruled_Line = No;
    Text_Display = No;
    Text_Display_Variable_Name = "";
    Chess_Type_Display_Position = Yes;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = No;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "";
    Origin_Position = 2;
    Output_Group_Name = "";
    Output {
        Map_Element_Name = "Car";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Road.Car";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Road.Car.Status";
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Road.Car.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Road.Car.ID";
    }
    Output {
        Map_Element_Name = "Stoplight";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Road.Stoplight";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Road.Stoplight.Color";
        Marker_Id = 2;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Road.Stoplight.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Road.Stoplight.ID";
    }
}


//-------------------------------------------------------
// Control Panel Definition Division
//-------------------------------------------------------
Control_Panel {
    Display_Area = 1686, 144, 218, 672;
    Display_Type = 0;
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "Starting Cars";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.StartingCars";
        Slider_Range_Max = 19;
        Slider_Value_Min = 10.0;
        Slider_Value_Step = 10.0;
        Slider_Value = "4";
    }
    Panel_Item {
        Item_Type = Toggle;
        Item_Name = "Target Lane";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.Targets";
        Control_On = Yes;
        Control_On_Int = 0;
        Control_On_Long = 0;
        Control_On_Double = 0.0;
        Control_On_String = "";
        Control_Off = No;
        Control_Off_Int = 0;
        Control_Off_Long = 0;
        Control_Off_Double = 0.0;
        Control_Off_String = "";
        Toggle_Button_On = No;
        Slider_Range_Max = 19;
        Slider_Value_Min = 10.0;
        Slider_Value_Step = 10.0;
        Slider_Value = "4";
        Shortcut_Key = "";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "Data Points";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.Datapoints";
        Text_Data = "1000";
    }
    Panel_Item {
        Item_Type = Drop_Down_List;
        Item_Name = "Light Spacing";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.StopsGap";
        Drop_Down_List_Value = "30","30","50","50","60","60","100","100";
    }
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "AsocialRate";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.ASocialrate";
        Slider_Range_Max = 10;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 0.1;
        Slider_Value = "0";
    }
    Panel_Item {
        Item_Type = Toggle;
        Item_Name = "Random Speeds";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.RandomSpeeds";
        Control_On = Yes;
        Control_On_Int = 0;
        Control_On_Long = 0;
        Control_On_Double = 0.0;
        Control_On_String = "";
        Control_Off = No;
        Control_Off_Int = 0;
        Control_Off_Long = 0;
        Control_Off_Double = 0.0;
        Control_Off_String = "";
        Toggle_Button_On = Yes;
        Slider_Range_Max = 10;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 0.1;
        Slider_Value = "0";
        Shortcut_Key = "";
    }
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "Number of Waves";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.NumWaves";
        Slider_Range_Max = 2;
        Slider_Value_Min = 1.0;
        Slider_Value_Step = 1.0;
        Slider_Value = "1";
    }
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "Light Active Time";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.LightActiveTime";
        Slider_Range_Max = 10;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 0.1;
        Slider_Value = "5";
    }
    Panel_Item {
        Item_Type = Toggle;
        Item_Name = "Record Data";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.RecordData";
        Control_On = Yes;
        Control_On_Int = 0;
        Control_On_Long = 0;
        Control_On_Double = 0.0;
        Control_On_String = "";
        Control_Off = No;
        Control_Off_Int = 0;
        Control_Off_Long = 0;
        Control_Off_Double = 0.0;
        Control_Off_String = "";
        Toggle_Button_On = Yes;
        Slider_Range_Max = 10;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 0.1;
        Slider_Value = "5";
        Shortcut_Key = "";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "Ideal Speed";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.IdealSpeed";
        Text_Data = "60.0";
    }
    Panel_Item {
        Item_Type = Button;
        Item_Name = "Random Recovery Time";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.RandomRecoveryTime";
        Control_On = Yes;
        Control_On_Int = 0;
        Control_On_Long = 0;
        Control_On_Double = 0.0;
        Control_On_String = "";
        Shortcut_Key = "";
    }
}


//-------------------------------------------------------
// Space Initial Value Definition Divsion
//-------------------------------------------------------
Space_Initial {
}


//-------------------------------------------------------
// Other Miscellaneous Data Definition Division
//-------------------------------------------------------
Others_Data {
    Indent = 4;
    Rule_Colored = Yes;
    Rule_LineNo = Yes;
    Window_Hide_Run = 1;
    Debug_Position_x = 75;
    Debug_Position_y = 75;
    Debug_Size_x = 400;
    Debug_Size_y = 200;
    Console_Position_x = 74;
    Console_Position_y = 446;
    Console_Size_x = 600;
    Console_Size_y = 452;
    Componen_Tree_Position_x = 2;
    Componen_Tree_Position_y = 0;
    Componen_Tree_Size_x = 250;
    Componen_Tree_Size_y = 400;
    Console_Background_Color = 16777215;
    Console_Foreground_Color = 255;
    Console_DisplayLines_Max = 500;
    plug_in_module_name = "";
    Font_Name = "Dialog";
    Font_Char_Set = 0;
    Font_Size = 14.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 0, 0, 0;
}


//-------------------------------------------------------
// Network Information Definition Division
//-------------------------------------------------------
Network_Info {
    Global_Space_Area = 0, 0, 100, 100;
    Local_Space_Info {
    }
}


//-------------------------------------------------------
// Window Location Definition Division
//-------------------------------------------------------
Window_Rectangle {
    Window_Name = Main_Window, -8, -8, 1936, 1056;
    Window_Name = Output_Setting_Window, 743, 353, 480, 350;
    Window_Name = Artisoc_Help_Window, 10, 10, 400, 300;
}


//-------------------------------------------------------
// Help Favorite Division
//-------------------------------------------------------
Help_Favorite {
}
