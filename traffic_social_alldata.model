//====================================================================/
//                                                                    /
// artisoc                                                            /
//                                                                    /
//====================================================================/

Version = 4.2;



//-------------------------------------------------------
// Component Tree
//-------------------------------------------------------
UNIVERSE {
    Space Road(0,0),Square_2D(3, 300, Loop, North, 1, !Map_3D){
        AgtType Car(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim MaxSpeed(0, 0) As Double = (0.0);
            Dim Speed(0, 0) <1>  As Double = ();
            Dim Target(0, 0) As Double = (0.0);
            Dim ASocial(0, 0) As Boolean = (0);
            Dim Accel(0, 0) As Double = (0.0);
            Dim Allowance(0, 0) As Double = (0.0);
            Dim Status(0, 0) As Integer = (0);
            Dim Patience(0, 0) As Integer = (0);
            Dim LaneChangeCount(0, 0) As Integer = (0);
            Dim Startstep(0, 0) As Integer = (0);
            Dim TravelTime(0, 0) As Integer = (0);
            Dim PrevY(0, 0) As Integer = (0);
            Dim Recovering(0, 0) As Integer = (0);
            Dim RecoveryTime(0, 0) As Integer = (0);
            Dim BaseAccel(0, 0) As Integer = (0);
            Dim FrontDists(0, 0) <3> [3] As Integer = (3*0);
            Dim BackDists(0, 0) <3> [2] As Integer = (2*0);
            Dim ReactionTime(0, 0) As Integer = (0);
            Dim Tracking(0, 0) As Boolean = ();
        }
        AgtType Stoplight(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim Color(0, 0) As Integer = (0);
            Dim Activetime(0, 0) As Double = (0.0);
            Dim State(0, 0) As Double = (0.0);
        }
    }
    Dim StartingCars(0, 0) As Integer = (0);
    Dim Scaling(0, 0) As Double = (0.0);
    Dim SlowedCars(0, 0) As Integer = (0);
    Dim Targets(0, 0) As Boolean = (0);
    Dim ASocialrate(0, 0) As Double = (0.0);
    Dim Slowdown(0, 0) As Double = (0.0);
    Dim FinishedCars(0, 0) As Integer = (0);
    Dim AvgTraveltime(0, 0) As Double = (0.0);
    Dim LatestTravelTime(0, 0) As Integer = (0);
    Dim AvgLaneChanges(0, 0) As Double = (0.0);
    Dim LatestLaneChanges(0, 0) As Integer = (0);
    Dim AvgLaneChangesASocial(0, 0) As Double = (0.0);
    Dim LatestLaneChangesASocial(0, 0) As Integer = (0);
    Dim Newstart(0, 0) As Integer = (0);
    Dim Datapoints(0, 0) As Integer = (0);
    Dim ASocialcountoverride(0, 0) As Integer = (0);
    Dim ASocialcars(0, 0) As Integer = (0);
    Dim StopsGap(0, 0) As Integer = (0);
    Dim LightPeriod(0, 0) As Double = (0.0);
    Dim RandomSpeeds(0, 0) As Boolean = (0);
    Dim IdealSpeed(0, 0) As Double = (0.0);
    Dim NumWaves(0, 0) As Integer = (0);
    Dim LightActiveTime(0, 0) As Double = (0.0);
    Dim StartingPatience(0, 0) As Integer = (0);
    Dim RecordData(0, 0) As Boolean = (0);
    Dim RandomRecoveryTime(0, 0) As Boolean = (0);
    Dim MaxCars(0, 0) As Integer = (0);
    Dim DumpSpeeds(0, 0) As Boolean = (0);
    Dim SpeedPoints(0, 0) As Integer = (0);
    Dim SpaceScaling(0, 0) As Double = (0.0);
    Dim TimeScaling(0, 0) As Double = (0.0);
    Dim BaseReactionTime(0, 0) As Integer = (0);
    Dim RecordedSpeedPoints(0, 0) As Integer = ();
    Dim DumpJams(0, 0) As Boolean = ();
    Dim WatchTime(0, 0) As Integer = ();
    Dim TrackCar(0, 0) As Boolean = ();
    Dim TrackingDoneSocial(0, 0) As Boolean = ();
    Dim TrackingDoneAsocial(0, 0) As Boolean = ();
    Dim currentlyTrackingSocial(0, 0) As Boolean = ();
    Dim currentlyTrackingASocial(0, 0) As Boolean = ();
}


//-------------------------------------------------------
// Agent Variable Initial Data
//-------------------------------------------------------
Initial_Value {
    UNIVERSE.STARTINGCARS = 1(10);
    UNIVERSE.SCALING = 1(36.0);
    UNIVERSE.TARGETS = 1(0);
    UNIVERSE.ASOCIALRATE = 1(0.5);
    UNIVERSE.SLOWDOWN = 1(0.0);
    UNIVERSE.NEWSTART = 1(0);
    UNIVERSE.DATAPOINTS = 1(10);
    UNIVERSE.ASOCIALCOUNTOVERRIDE = 1(0);
    UNIVERSE.STOPSGAP = 1(30);
    UNIVERSE.LIGHTPERIOD = 1(100.0);
    UNIVERSE.RANDOMSPEEDS = 1(1);
    UNIVERSE.IDEALSPEED = 1(60.0);
    UNIVERSE.NUMWAVES = 1(1);
    UNIVERSE.LIGHTACTIVETIME = 1(1.0);
    UNIVERSE.STARTINGPATIENCE = 1(10);
    UNIVERSE.RECORDDATA = 1(0);
    UNIVERSE.MAXCARS = 1(300);
    UNIVERSE.DUMPSPEEDS = 1(0);
    UNIVERSE.SPEEDPOINTS = 1(10);
    UNIVERSE.RECORDEDSPEEDPOINTS = 1(0);
    UNIVERSE.DUMPJAMS = 1(0);
}


//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE
Univ_Init{

if Universe.RecordData then
	OpenFileCSV("data\\output.csv", 1, 2)

	WriteFileCSV(1, "Travel Time", False)
	WriteFileCSV(1, "Max Speed", False)
	WriteFileCSV(1, "Reaction Time", False)
	WriteFileCSV(1, "Lane Changes", False)
	WriteFileCSV(1, "ASocial", False)
	WriteFileCSV(1, "Number of Waves", False)
	WriteFileCSV(1, "Spacing Between Lights", False)
	WriteFileCSV(1, "Stoplight Active Time", False)

	WriteFileCSV(1, "Total Cars", False)
	WriteFileCSV(1, "ASocial Rate", True)

	CloseFileCSV(1)
end if

if Universe.DumpSpeeds then
	OpenFileCSV("data\\speeds.csv", 2, 2)

	WriteFileCSV(2, "Speed", False)
	WriteFileCSV(2, "Max Speed", False)
	WriteFileCSV(2, "Time Step", False)
	WriteFileCSV(2, "Reaction Time", False)
	WriteFileCSV(2, "Slowed", False)
	WriteFileCSV(2, "Total Cars", False)
	WriteFileCSV(2, "ASocial", False)
	WriteFileCSV(2, "ASocial Rate", False)
	WriteFileCSV(2, "Spacing Between Lights", False)
	WriteFileCSV(2, "Stoplight Active Time", True)
	
	CloseFileCSV(2)
end if

if Universe.DumpJams then
	OpenFileCSV("data\\Jams.csv", 3, 2)

	WriteFileCSV(3, "ASocial Rate", False)
	WriteFileCSV(3, "Total Cars", False)
	
	WriteFileCSV(3, "ASocial", False)
	WriteFileCSV(3, "Reaction", False)
	WriteFileCSV(3, "Time", False)
	WriteFileCSV(3, "X", False)
	WriteFileCSV(3, "Y", True)

	CloseFileCSV(3)
end if

if Universe.TrackCar then
	OpenfileCSV("data\\singlecar.csv", 4, 2)

	WriteFileCSV(4, "Lifetime", False)
	WriteFileCSV(4, "X", False)
	WriteFileCSV(4, "Y", False)
	WriteFileCSV(4, "Speed", False)
	WriteFileCSV(4, "MaxSpeed", False)
	WriteFileCSV(4, "Reaction", False)

	WriteFileCSV(4, "ASocial Rate", False)
	WriteFileCSV(4, "ASocial", False)
	WriteFileCSV(4, "TotalCars", True)

	CloseFileCSV(4)
end if

if Universe.RecordData or Universe.DumpSpeeds or Universe.DumpJams or Universe.TrackCar then
	initialize(10, 0.0, 0)
else
	initialize(Universe.StartingCars, Universe.ASocialrate, Universe.BaseReactionTime)
end if
}

Univ_Step_Begin{
Universe.SlowedCars = 0
}

Univ_Step_End{
dim newCar as agt
dim aCar as agt
dim i as integer
dim BottomCars as agtset
dim allcars as agtset

dim sampleperiod as integer
dim samples as double
dim stepnumber as integer

dim dataNotDone as boolean
dim speedsNotDone as boolean
dim jamsNotDone as boolean
dim trackingNotDone as boolean


//----------------------------------CAR REGENERATION BLOCK-----------------------------
if CountAgt(Universe.Road.Car) < Universe.StartingCars then
	i = Int(Rnd() * 3)
	MakeAllAgtSetAroundPositionCell(BottomCars, Universe.Road, i, 0, 0, 0)
	if countagtset(BottomCars) == 0 then
		newCar = CreateAgt(Universe.Road.Car)
		newCar.X = i
	end if
end if


//---------------------------------SPEED DUMP BLOCK-------------------------
sampleperiod = 100

stepnumber = GetCountStep() - Universe.Newstart

if (stepnumber mod sampleperiod == 0) and Universe.DumpSpeeds and Universe.RecordedSpeedPoints < Universe.SpeedPoints then
	makeAgtSet(allcars, Universe.Road.Car)
	if CountAgtSet (allcars) <> 0 then
		OpenFileCSV("data\\speeds.csv", 2, 3)

		for each aCar in allCars
			WriteFileCSV(2, aCar.Speed, False)
			WriteFileCSV(2, aCar.MaxSpeed, False)
			WriteFileCSV(2, stepnumber, False)
			WriteFileCSV(2, aCar.ReactionTime/Universe.TimeScaling, False)
			WriteFileCSV(2, aCar.Speed != aCar.MaxSpeed, False)
			WriteFileCSV(2, Universe.StartingCars, False)
			WriteFileCSV(2, aCar.ASocial, False)
	
			WriteFileCSV(2, Universe.ASocialrate, False)
			WriteFileCSV(2, Universe.StopsGap, False)
			WriteFileCSV(2, Universe.LightActiveTime, True)

			Universe.RecordedSpeedPoints = Universe.RecordedSpeedPoints + 1
			
		next aCar
		CloseFileCSV(2)
	end if
end if



//----------------------UNIVERSE TERMINATION BLOCK--------------------------------------
//check what's done
dataNotDone = not (Universe.FinishedCars >= Universe.Datapoints)
speedsNotDone = not (Universe.RecordedSpeedPoints >= Universe.SpeedPoints)
jamsNotDone = not (stepnumber > 500 + (Universe.WatchTime * Universe.TimeScaling))
trackingNotDone = not (Universe.TrackingDoneAsocial and Universe.TrackingDoneSocial)

//if something isn't done, keep going
if (Universe.RecordData and dataNotDone) or (Universe.DumpSpeeds and speedsNotDone) or (Universe.DumpJams and jamsNotDone) or (Universe.TrackCar and trackingNotDone) then
	//keep going
else
	nextsim()
end if
}

Univ_Finish{

}


sub nextsim(){
dim aCar as agt
dim allcars as agtset

	MakeAgtSet(allcars, Universe.Road.Car)
	if countAgtSet(allcars) <> 0 then
		for each aCar in allcars
			KillAgt(aCar)
		next aCar
	end if

	Universe.FinishedCars = 0

	//report that one run was just finished
	println(Universe.StartingCars & " starting cars, " & Universe.ASocialrate & " ASocialness, "&Universe.BaseReactionTime/Universe.TimeScaling&" Reaction time Done")

	
	//determine parameters for next run
	if Universe.BaseReactionTime == 2 then
		if Universe.ASocialrate >= 0.999 then
			if Universe.StartingCars == Universe.MaxCars then
				//all three parameters are at max, therefore the simulations are complete
				ExitSimulationMsgLn("ALL Completed")
			else
				//cars are not yet at maximum possible
				Universe.StartingCars = Universe.StartingCars + 10
				Universe.ASocialrate = 0
			end if
		else
			Universe.ASocialrate = Universe.ASocialrate + 0.1
		end if
		Universe.BaseReactionTime = 0
	else
		Universe.BaseReactionTime = Universe.BaseReactionTime + 1
	end if
		
	initialize(Universe.StartingCars, Universe.ASocialrate, Universe.BaseReactionTime)
}


sub initialize(startingcars as integer, ASocialrate as double, basereactiontime as integer) {
Dim i as integer
Dim j as integer
Dim cars as agtset
Dim stop as agt

Universe.StartingCars = startingcars
Universe.ASocialrate = ASocialrate
Universe.BaseReactionTime = basereactiontime
Universe.RecordedSpeedPoints = 0

Universe.ASocialcars = 0

Universe.TimeScaling = 2 //ticks per second
Universe.SpaceScaling = 5 //meters per unit space on the simulation
Universe.Scaling = 3.6 * Universe.TimeScaling * Universe.SpaceScaling  //Scaling converts from km/hr to units per tick

//--------------------------------------------Stoplight Creation Block------------------------------------
Universe.LightPeriod = GetheightSpace(Universe.Road) / ((Universe.IdealSpeed / Universe.Scaling) * Universe.NumWaves)

for i = 1 to Round(GetHeightSpace(Universe.Road) / Universe.StopsGap)
	for j = 0 to 2
		stop = CreateAgt(Universe.Road.Stoplight)
		stop.X = j
		stop.Y = (i * Universe.StopsGap) -1
		stop.State = (stop.Y  / (GetHeightSpace(Universe.Road)/ CDbl(Universe.NumWaves))) mod 1.0
	next j
next i


for i=0 to Universe.StartingCars - 1
	CreateAgt(Universe.Road.Car)
next i

MakeAgtSet(cars, Universe.Road.Car)
RandomPutAgtSetCell(cars, False)

Universe.FinishedCars = 0

Universe.TrackingDoneSocial = False
Universe.TrackingDoneAsocial = False

Universe.currentlyTrackingSocial = False
Universe.currentlyTrackingASocial = False

if ASocialrate == 0 then
	Universe.TrackingDoneAsocial = True
elseif ASocialrate >= 0.99 then
	Universe.TrackingDoneSocial = True
end if


Universe.Newstart = GetCountStep()
}
#end_rule UNIVERSE




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.ROAD.CAR
Agt_Init{
My.X = int(Rnd() * GetWidthSpaceOwn())
My.Y = 0
My.Direction = 90
My.Target = Int(Rnd() * 3)

reinitialize()
}

Agt_Step{

//Accelerate. If recovering from a previous deceleration, then acelerate carefully.
if My.Recovering < My.RecoveryTime then
	My.Accel = My.BaseAccel * 0.5
	My.Recovering = My.Recovering +1
else
	My.Accel = My.BaseAccel
end if

if My.Speed < My.MaxSpeed then
	My.Speed = My.Speed + My.Accel
	if My.Speed > My.MaxSpeed then
		My.Speed = My.MaxSpeed
	end if
end if

//look ahead
lookaround()

//----------- LANE CHANGING BLOCK ----------------
if My.Patience <= 0 then //and  GetHistory(My.Speed, 1) <> 0 then //if out of patience and in motion

	//if front is more open than left
	if GetHistory(My.FrontDists(1), My.ReactionTime) >= GetHistory(My.FrontDists(0), My.ReactionTime) then

		//if front is also more open than right
		if GetHistory(My.FrontDists(1), My.ReactionTime) >= GetHistory(My.FrontDists(2), My.ReactionTime) then
			driveforward(GetHistory(My.FrontDists(1), My.ReactionTime))

		else
			//therefore right is most open, now check if asocial
			if My.ASocial then
				My.X = My.X + 1
				My.LaneChangeCount = My.LaneChangeCount + 1
				My.patience = Universe.StartingPatience
				driveforward(GetHistory(My.FrontDists(2), My.ReactionTime))

			//if social with space behind
			elseif GetHistory(My.BackDists(1), My.ReactionTime) < 1 + (My.Speed/Universe.Scaling) then
				My.X = My.X + 1
				My.LaneChangeCount = My.LaneChangeCount + 1
				My.patience = Universe.StartingPatience
				driveforward(GetHistory(My.FrontDists(2), My.ReactionTime))

			//if social with no space behind, go forward
			else
				driveforward(GetHistory(My.FrontDists(1), My.ReactionTime))
			end if
		end if

	//then left has more space than ahead. Check if left is also more than right.
	elseif GetHistory(My.FrontDists(0), My.ReactionTime) > GetHistory(My.FrontDists(2), My.ReactionTime) then

		//check if ASocial
  	if My.ASocial then
			My.X = My.X - 1
			My.LaneChangeCount = My.LaneChangeCount + 1
			My.patience = Universe.StartingPatience
			driveforward(GetHistory(My.FrontDists(0), My.ReactionTime))

    //if social with space behind
    elseif GetHistory(My.BackDists(0), My.ReactionTime) < 1 + (My.Speed/Universe.Scaling) then
			My.X = My.X - 1
			My.LaneChangeCount = My.LaneChangeCount + 1
			My.patience = Universe.StartingPatience
			driveforward(GetHistory(My.FrontDists(0), My.ReactionTime))

    //if social with no space behind
	  else
    	driveforward(GetHistory(My.FrontDists(1), My.ReactionTime))
		end if

  //therefore right is most open
	else

    //check if asocial
		if My.ASocial then
			My.X = My.X + 1
			My.LaneChangeCount = My.LaneChangeCount + 1
			My.patience = Universe.StartingPatience
			driveforward(GetHistory(My.FrontDists(2), My.ReactionTime))

    //if social with space behind
		elseif GetHistory(My.BackDists(1), My.ReactionTime) < 1 + (My.Speed/Universe.Scaling) then
			My.X = My.X + 1
			My.LaneChangeCount = My.LaneChangeCount + 1
			My.patience = Universe.StartingPatience
			driveforward(GetHistory(My.FrontDists(2), My.ReactionTime))

		//if social with no space behind, go forward
		else
			driveforward(GetHistory(My.FrontDists(1), My.ReactionTime))
		end if
	end if
else//if still patient
	driveforward(GetHistory(My.FrontDists(1), My.ReactionTime))
end if
}


sub driveforward(headway as double) {
dim overflow as double
dim stepnumber as integer

My.Allowance = 1 + (My.Speed/Universe.Scaling) * 1

If headway < My.Allowance then
	My.Speed = (headway - 1) * Universe.Scaling * 0.6
	My.Status = Color_red
	Universe.SlowedCars = Universe.SlowedCars + 1
	My.patience = My.patience - 1
	My.Recovering = 0

else
	if My.ASocial then
		My.Status = Color_black
	else
		My.Status = Color_green
	end if
end if

stepnumber = GetCountStep() - Universe.Newstart

if My.Speed < 0 then
	My.Speed = 0
	if (Universe.DumpJams and GetHistory(My.Speed, 1) != 0) and (stepnumber > 500 or stepnumber < 500 + (Universe.WatchTime * Universe.TimeScaling)) then
		reportStop()
	end if
end if
Forward(My.Speed / Universe.Scaling)

//if this is being tracked, report
if My.Tracking then
	OpenfileCSV("data\\singlecar.csv", 4, 3)

	WriteFileCSV(4, GetCountStep() -My.Startstep, False)
	WriteFileCSV(4, My.X, False)
	WriteFileCSV(4, My.Y, False)
	WriteFileCSV(4, My.Speed, False)
	WriteFileCSV(4, My.MaxSpeed, False)
	WriteFileCSV(4, My.ReactionTime/Universe.TimeScaling, False)

	WriteFileCSV(4, Universe.ASocialrate, False)
	WriteFileCSV(4, My.ASocial, False)
	WriteFileCSV(4, Universe.StartingCars, True)
	
	CloseFileCSV(4)
end if

if My.Y < My.PrevY then
	if Universe.RecordData then
		report()
	else
		My.TravelTime = GetCountStep() -My.Startstep
		My.Startstep = GetCountStep()		
	end if

	if My.Tracking and My.ASocial then
		Universe.TrackingDoneAsocial = True
	elseif My.Tracking and (not My.ASocial)  then
		Universe.TrackingDoneSocial = True
	end if
	
	reinitialize()
	
end if

My.PrevY = My.Y
}

sub report(){

	My.traveltime = GetCountStep() - My.Startstep

	if My.Traveltime >=  (Universe.LightPeriod * Universe.NumWaves) * 0.7 then
		if GetCountStep() - Universe.Newstart >= 500 and Universe.FinishedCars < Universe.Datapoints then
			Universe.AvgTraveltime = ((Universe.AvgTraveltime * Universe.FinishedCars) + My.TravelTime)/(Universe.FinishedCars + 1)
			Universe.LatestTravelTime = My.TravelTime

			if My.ASocial then
				//Universe.AvgLaneChangesASocial = ((Universe.AvgLaneChangesASocial * Universe.FinishedCars) + My.LaneChangeCount)/(Universe.FinishedCars +1)
				Universe.LatestLaneChangesASocial = My.LaneChangeCount
			else
				//Universe.AvgLaneChanges = ((Universe.AvgLaneChanges * Universe.FinishedCars) + My.LaneChangeCount)/(Universe.FinishedCars +1)
				Universe.LatestLaneChanges = My.LaneChangeCount
			end if
 	//------------------------------------------------REPORT DATA------------------------------------
			OpenFileCSV("data\\output.csv", 1, 3)

			WriteFileCSV(1, My.TravelTime, False)
			WriteFileCSV(1, My.MaxSpeed, False)
			WriteFileCSV(1, My.ReactionTime/Universe.TimeScaling, False)
			WriteFileCSV(1, My.LaneChangeCount, False)
			WriteFileCSV(1, My.ASocial, False)
			WriteFileCSV(1, Universe.NumWaves, False)
			WriteFileCSV(1, Universe.StopsGap, False)
			WriteFileCSV(1, Universe.LightActiveTime, False)
			WriteFileCSV(1, Universe.StartingCars, False)
			WriteFileCSV(1, Universe.ASocialrate, True)

			CloseFileCSV(1)

			Universe.FinishedCars = Universe.FinishedCars + 1
		end if

// -------------------REINITIALIZE VALUES-------------------
		reinitialize()

	end if
}


sub reportStop(){
	OpenFileCSV("data\\Jams.csv", 3, 3)
	
	WriteFileCSV(3, Universe.ASocialrate, False)
	WriteFileCSV(3, Universe.StartingCars, False)
	
	WriteFileCSV(3, My.ASocial, False)
	WriteFileCSV(3, My.ReactionTime/Universe.TimeScaling, False)
	WriteFileCSV(3, (GetCountStep() - Universe.Newstart)/Universe.TimeScaling, False)
	WriteFileCSV(3, My.X, False)
	WriteFileCSV(3, My.Y, True)

	CloseFileCSV(3)
}


sub reinitialize(){

My.Startstep = GetCountStep()
My.LaneChangeCount = 0
My.Patience = Universe.StartingPatience

My.ReactionTime = Universe.BaseReactionTime


//Speeds are all expressed in km/hr. Universe.Scaling converts speeds to spaces/tick (1 space = 5 m, 1 tick = 0.5 second)
if Universe.RandomSpeeds then
	My.MaxSpeed = NormInv(Rnd(), Universe.IdealSpeed, 5)
else
	My.MaxSpeed = Universe.IdealSpeed
end if

My.Speed = My.MaxSpeed
My.BaseAccel = 5// (Rnd() * 4) + 1
My.Accel = My.BaseAccel

// Recovery time is the number of seconds a car will have a reduced acceleration value.
if Universe.RandomRecoveryTime then
	My.RecoveryTime = int(Rnd() * 10) * Universe.TimeScaling
else
	My.RecoveryTime = 5 * Universe.TimeScaling
end if

//A car is in the "recovering" state when my.recovering != my.RecoveryTime
My.Recovering = My.RecoveryTime

//roll to see if asocial
if Universe.ASocialcountoverride == 0 then
	if Rnd() < Universe.ASocialrate then
		My.ASocial = True
		My.Status = Color_black
	else
		My.ASocial = False
		My.Status = Color_green
	end if

elseif Universe.ASocialcars < Universe.ASocialcountoverride then
	My.ASocial = True
	My.Status = color_black
	Universe.ASocialcars = Universe.ASocialcars + 1

else
	My.ASocial = False
	My.Status = Color_green
end if

//initialize tracking
if Universe.TrackCar and (GetCountStep() - Universe.Newstart) > 100 then
	if (not Universe.TrackingDoneSocial) and (not My.ASocial) and (not Universe.currentlyTrackingSocial) then
		My.Tracking = True
		Universe.currentlyTrackingSocial = True
	elseif (not Universe.TrackingDoneAsocial) and My.ASocial  and (not Universe.currentlyTrackingASocial) then
		My.Tracking = True
		Universe.currentlyTrackingASocial = True
	end if
end if
		


lookaround()
}


sub lookaround(){

dim Cars as agtset
dim aCar as agt
dim Lights as agtset
dim Light as agt
dim nextred as double

nextred = 100

//-------------------------------LOOK AT STREET LIGHTS HERE-------------------------------------------------
nextred = Universe.StopsGap - (My.Y mod Universe.StopsGap)

MakeOneAgtSetAroundPositionCell(Lights, Universe.Road, 1, My.Y + nextred, 0, 2, Universe.Road.Stoplight)
Light = GetAgt(Lights, 0)
if Light.Color != Color_red then
	nextred = 100
end if

//initialize nearest distances (make the max = distance to next traffic light)
My.FrontDists(1) = nextred
if My.X == 0 then
	My.FrontDists(0) = 0
	My.FrontDists(2) = nextred
	My.BackDists(0) = 0
	My.BackDists(1) = 100
elseif My.X == 2 then
	My.FrontDists(2) = 0
	My.FrontDists(0) = nextred
	My.BackDists(0) = 100
	My.BackDists(1) = 0
else
	My.FrontDists(2) = nextred
	My.FrontDists(0) = nextred
	My.BackDists(0) = 100
	My.BackDists(1) = 100
end if


//-------------------------------------------LOOK AHEAD---------------------------------------------
MakeOneAgtSetAroundPositionCell(Cars, Universe.Road, My.X, My.Y + 3, 0, 2, Universe.Road.Car)
If countagtset(Cars) <> 0 then
	For each aCar in Cars//check cars ahead

		//car in front
		if aCar.X == My.X and aCar.Y >= My.Y and aCar.Y - My.Y < My.FrontDists(1) then
			My.FrontDists(1) = aCar.Y - My.Y
		elseif aCar.X == My.X and aCar.Y + GetHeightSpace(Universe.Road) >= My.Y and aCar.Y + GetHeightSpace(Universe.Road) - My.Y < My.FrontDists(1) then
			My.FrontDists(1) = aCar.Y + GetHeightSpace(Universe.Road) - My.Y

		//car to the right
		elseif aCar.X == My.X + 1 and aCar.Y >= My.Y and aCar.Y - My.Y < My.FrontDists(2) then
			My.FrontDists(2) = aCar.Y - My.Y
		elseif aCar.X == My.X + 1 and aCar.Y + GetHeightSpace(Universe.Road) >= My.Y and aCar.Y + GetHeightSpace(Universe.Road) - My.Y < My.FrontDists(2) then
			My.FrontDists(2) = aCar.Y + GetHeightSpace(Universe.Road) - My.Y

		//car to the left
		elseif aCar.X == My.X - 1 and aCar.Y >= My.Y and aCar.Y - My.Y < My.FrontDists(0) then
			My.FrontDists(0) = aCar.Y - My.Y
		elseif aCar.X == My.X - 1 and aCar.Y + GetHeightSpace(Universe.Road) >= My.Y and aCar.Y + GetHeightSpace(Universe.Road) - My.Y < My.FrontDists(0) then
			My.FrontDists(0) = aCar.Y + GetHeightSpace(Universe.Road) - My.Y

		end if
	next aCar
end if


//------------------------------------------------LOOK BEHIND----------------------------------------
MakeOneAgtSetAroundPositionCell(Cars, Universe.Road, My.X, My.Y - 3, 0, 3, Universe.Road.Car)
If countagtset(Cars) <> 0 then
	For each aCar in Cars//check cars behind

		//car to the right
		if aCar.X == My.X + 1 and aCar.Y <= My.Y and Abs(aCar.Y - My.Y) < My.BackDists(1) then
			My.BackDists(1) = Abs(aCar.Y - My.Y)
		elseif aCar.X == My.X + 1 and aCar.Y <= My.Y  + GetHeightSpace(Universe.Road) and My.Y + GetHeightSpace(Universe.Road) - aCar.Y < My.BackDists(1) then
			My.BackDists(1) = My.Y + GetHeightSpace(Universe.Road) - aCar.Y

		//car to the left
		elseif aCar.X == My.X - 1 and aCar.Y <= My.Y and Abs(aCar.Y - My.Y) < My.FrontDists(0) then
			My.BackDists(0) = Abs(aCar.Y - My.Y)
		elseif aCar.X == My.X - 1 and aCar.Y <= My.Y  + GetHeightSpace(Universe.Road) and My.Y + GetHeightSpace(Universe.Road) - aCar.Y  < My.BackDists(0) then
			My.BackDists(0) = My.Y + GetHeightSpace(Universe.Road) - aCar.Y

		end if
	next aCar
end if
}
#end_rule UNIVERSE.ROAD.CAR




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.ROAD.STOPLIGHT
Agt_Init{

if My.State >= Universe.LightActiveTime then
	My.Color = Color_red
else
	My.Color = Color_Green
end if
}

Agt_Step{
My.State = My.State - (1 / Universe.LightPeriod)

if Universe.LightActiveTime == 1 then
	My.Color = Color_White
elseif My.State <=  0 then
	My.Color = COLOR_Red
	My.State = 1
elseif My.State <= Universe.LightActiveTime then
	My.Color = Color_Green
else
	My.Color = Color_Red
end if
}
#end_rule UNIVERSE.ROAD.STOPLIGHT




//-------------------------------------------------------
// Simulation Definition Division
//-------------------------------------------------------
Single_Simulation {
    Step_Max = 0;
    Time_Max = 0;
    End_Condition = "";
    Exec_Wait = 0;
    Exec_Wait_Max = 0;
    Random_Generator = Java_Standard;
    Exec_Order = Random;
    Exec_Order_Random_First_Step_Only = No;
    Random_Seed = 0;
    Redraw_Timing = Step;
    Redraw_Interval = 1;
    Garbage_Interval = 0;
}


//-------------------------------------------------------
// Simulation Loop Definition Division
//-------------------------------------------------------
Repeat_Simulation {
    Value_Change = None;
    Initial_Value_Change_None {
        Repeat_Max = 1;
    }
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "Universe.Road";
    Map_Name = "Road 1";
    Title = "Road 1";
    Disable = No;
    Background_Color = 255, 255, 255;
    Position_x = 756;
    Position_y = 6;
    Size_x = 129;
    Size_y = 827;
    Map_Cell_Size = 2;
    Remarks = No;
    Legend_Pos = Top;
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    FastDraw = Yes;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Axis_Label = "", "";
    Draw_Range = 0, 0, 3, 100;
    Ruled_Line = No;
    Text_Display = No;
    Text_Display_Variable_Name = "";
    Chess_Type_Display_Position = Yes;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = No;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "";
    Origin_Position = 2;
    Output_Group_Name = "";
    Output {
        Map_Element_Name = "Car";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Road.Car";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Road.Car.Status";
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Road.Car.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Road.Car.ID";
    }
    Output {
        Map_Element_Name = "Stoplight";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Road.Stoplight";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Road.Stoplight.Color";
        Marker_Id = 2;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Road.Stoplight.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Road.Stoplight.ID";
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "Number of cars";
    Title = "Cars";
    Disable = Yes;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = No;
    Position_x = 162;
    Position_y = 450;
    Size_x = 500;
    Size_y = 300;
    Map_Cell_Size = -1;
    Axis_Label = "", "";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "Car Count";
        Line_Color = 255, 0, 0;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "CountAgt(Universe.Road.Car)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 255, 0);
    }
    Output {
        Graph_Element_Name = "Slowed Cars";
        Line_Color = 0, 0, 255;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.SlowedCars";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (255, 0, 0);
    }
    Output {
        Graph_Element_Name = "Max Cars";
        Line_Color = 255, 0, 0;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.StartingCars";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (51, 51, 255);
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "Travel Time";
    Title = "Travel Time";
    Disable = Yes;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = No;
    Position_x = 1150;
    Position_y = 556;
    Size_x = 500;
    Size_y = 308;
    Map_Cell_Size = -1;
    Axis_Label = "", "";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "Average Travel Time";
        Line_Color = 0, 255, 0;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.AvgTraveltime";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 102, 255);
    }
    Output {
        Graph_Element_Name = "Latest Travel Time";
        Line_Color = 255, 0, 0;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.LatestTravelTime";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 255, 0);
    }
}


//-------------------------------------------------------
// Numeric Data Window Output Definition Division
//-------------------------------------------------------
Numeric_Output {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Position_x = 140;
    Position_y = 122;
    Size_x = 500;
    Size_y = 300;
    Map_Cell_Size = -1;
    Numeric_Name = "Average Values";
    Title = "Average Values";
    Disable = Yes;
    Output_Group_Name = "";
    OUTPUT {
        Output_Element_Name = "Average Travel Time";
        Figures = 2;
        Format_Id = 0;
        Output_Expression = "Universe.AvgTraveltime";
    }
    OUTPUT {
        Output_Element_Name = "Average Lane Changes";
        Figures = 2;
        Format_Id = 0;
        Output_Expression = "Universe.AvgLaneChanges";
    }
    OUTPUT {
        Output_Element_Name = "Average Lane Changes (Selfish)";
        Figures = 3;
        Format_Id = 0;
        Output_Expression = "Universe.AvgLaneChangesASocial";
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "Lane Changes";
    Title = "Lane Changes";
    Disable = Yes;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = No;
    Position_x = 1126;
    Position_y = 100;
    Size_x = 500;
    Size_y = 300;
    Map_Cell_Size = -1;
    Axis_Label = "", "";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "Average Lane Changes";
        Line_Color = 255, 0, 255;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.AvgLaneChanges";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 0, 255);
    }
    Output {
        Graph_Element_Name = "Latest Lane Changes";
        Line_Color = 0, 255, 255;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.LatestLaneChanges";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 255, 0);
    }
    Output {
        Graph_Element_Name = "Average Lane Changes (Selfish)";
        Line_Color = 128, 128, 128;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.AvgLaneChangesASocial";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (255, 0, 51);
    }
    Output {
        Graph_Element_Name = "Latest Lane Changes (Selfish)";
        Line_Color = 255, 0, 0;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.LatestLaneChangesASocial";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (204, 0, 204);
    }
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "Universe.Road";
    Map_Name = "Road 2";
    Title = "Road 2";
    Disable = No;
    Background_Color = 255, 255, 255;
    Position_x = 889;
    Position_y = 7;
    Size_x = 129;
    Size_y = 830;
    Map_Cell_Size = 2;
    Remarks = No;
    Legend_Pos = Top;
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    FastDraw = Yes;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Axis_Label = "", "";
    Draw_Range = 0, 101, 3, 200;
    Ruled_Line = No;
    Text_Display = No;
    Text_Display_Variable_Name = "";
    Chess_Type_Display_Position = Yes;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = No;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "";
    Origin_Position = 2;
    Output_Group_Name = "";
    Output {
        Map_Element_Name = "Car";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Road.Car";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Road.Car.Status";
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Road.Car.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Road.Car.ID";
    }
    Output {
        Map_Element_Name = "Stoplight";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Road.Stoplight";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Road.Stoplight.Color";
        Marker_Id = 2;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Road.Stoplight.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Road.Stoplight.ID";
    }
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "Universe.Road";
    Map_Name = "Road 3";
    Title = "Road 3";
    Disable = No;
    Background_Color = 255, 255, 255;
    Position_x = 1018;
    Position_y = 8;
    Size_x = 129;
    Size_y = 828;
    Map_Cell_Size = 2;
    Remarks = No;
    Legend_Pos = Top;
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    FastDraw = Yes;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Axis_Label = "", "";
    Draw_Range = 0, 201, 3, 300;
    Ruled_Line = No;
    Text_Display = No;
    Text_Display_Variable_Name = "";
    Chess_Type_Display_Position = Yes;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = No;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "";
    Origin_Position = 2;
    Output_Group_Name = "";
    Output {
        Map_Element_Name = "Car";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Road.Car";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Road.Car.Status";
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Road.Car.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Road.Car.ID";
    }
    Output {
        Map_Element_Name = "Stoplight";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Road.Stoplight";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Road.Stoplight.Color";
        Marker_Id = 2;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Road.Stoplight.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Road.Stoplight.ID";
    }
}


//-------------------------------------------------------
// Control Panel Definition Division
//-------------------------------------------------------
Control_Panel {
    Display_Area = 1317, 0, 486, 827;
    Display_Type = 0;
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "Starting Cars";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.StartingCars";
        Slider_Range_Max = 29;
        Slider_Value_Min = 10.0;
        Slider_Value_Step = 10.0;
        Slider_Value = "0";
    }
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "Maximum cars";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.MaxCars";
        Slider_Range_Max = 20;
        Slider_Value_Min = 100.0;
        Slider_Value_Step = 10.0;
        Slider_Value = "20";
    }
    Panel_Item {
        Item_Type = Toggle;
        Item_Name = "Target Lane";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.Targets";
        Control_On = Yes;
        Control_On_Int = 0;
        Control_On_Long = 0;
        Control_On_Double = 0.0;
        Control_On_String = "";
        Control_Off = No;
        Control_Off_Int = 0;
        Control_Off_Long = 0;
        Control_Off_Double = 0.0;
        Control_Off_String = "";
        Toggle_Button_On = No;
        Slider_Range_Max = 20;
        Slider_Value_Min = 100.0;
        Slider_Value_Step = 10.0;
        Slider_Value = "20";
        Shortcut_Key = "";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "Data Points";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.Datapoints";
        Text_Data = "10";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "Data Points (Speed)";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.SpeedPoints";
        Text_Data = "10";
    }
    Panel_Item {
        Item_Type = Drop_Down_List;
        Item_Name = "Light Spacing";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.StopsGap";
        Drop_Down_List_Value = "30","30","50","50","60","60","100","100";
    }
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "AsocialRate";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.ASocialrate";
        Slider_Range_Max = 10;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 0.1;
        Slider_Value = "5";
    }
    Panel_Item {
        Item_Type = Toggle;
        Item_Name = "Random Speeds";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.RandomSpeeds";
        Control_On = Yes;
        Control_On_Int = 0;
        Control_On_Long = 0;
        Control_On_Double = 0.0;
        Control_On_String = "";
        Control_Off = No;
        Control_Off_Int = 0;
        Control_Off_Long = 0;
        Control_Off_Double = 0.0;
        Control_Off_String = "";
        Toggle_Button_On = Yes;
        Slider_Range_Max = 10;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 0.1;
        Slider_Value = "5";
        Shortcut_Key = "";
    }
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "Number of Waves";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.NumWaves";
        Slider_Range_Max = 2;
        Slider_Value_Min = 1.0;
        Slider_Value_Step = 1.0;
        Slider_Value = "0";
    }
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "Light Active Time";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.LightActiveTime";
        Slider_Range_Max = 10;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 0.1;
        Slider_Value = "10";
    }
    Panel_Item {
        Item_Type = Toggle;
        Item_Name = "Record Data";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.RecordData";
        Control_On = Yes;
        Control_On_Int = 0;
        Control_On_Long = 0;
        Control_On_Double = 0.0;
        Control_On_String = "";
        Control_Off = No;
        Control_Off_Int = 0;
        Control_Off_Long = 0;
        Control_Off_Double = 0.0;
        Control_Off_String = "";
        Toggle_Button_On = No;
        Slider_Range_Max = 10;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 0.1;
        Slider_Value = "10";
        Shortcut_Key = "";
    }
    Panel_Item {
        Item_Type = Toggle;
        Item_Name = "Dump Speeds?";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.DumpSpeeds";
        Control_On = Yes;
        Control_On_Int = 0;
        Control_On_Long = 0;
        Control_On_Double = 0.0;
        Control_On_String = "";
        Control_Off = No;
        Control_Off_Int = 0;
        Control_Off_Long = 0;
        Control_Off_Double = 0.0;
        Control_Off_String = "";
        Toggle_Button_On = No;
        Slider_Range_Max = 10;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 0.1;
        Slider_Value = "10";
        Shortcut_Key = "";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "Ideal Speed";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.IdealSpeed";
        Text_Data = "60.0";
    }
    Panel_Item {
        Item_Type = Button;
        Item_Name = "Random Recovery Time";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.RandomRecoveryTime";
        Control_On = Yes;
        Control_On_Int = 0;
        Control_On_Long = 0;
        Control_On_Double = 0.0;
        Control_On_String = "";
        Shortcut_Key = "";
    }
    Panel_Item {
        Item_Type = Toggle;
        Item_Name = "Find Jams?";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.DumpJams";
        Control_On = Yes;
        Control_On_Int = 0;
        Control_On_Long = 0;
        Control_On_Double = 0.0;
        Control_On_String = "";
        Control_Off = No;
        Control_Off_Int = 0;
        Control_Off_Long = 0;
        Control_Off_Double = 0.0;
        Control_Off_String = "";
        Toggle_Button_On = No;
        Slider_Range_Max = 10;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 0.1;
        Slider_Value = "10";
        Shortcut_Key = "";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "Watch time (seconds)";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.WatchTime";
        Text_Data = "200";
    }
    Panel_Item {
        Item_Type = Toggle;
        Item_Name = "Track a Car?";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.TrackCar";
        Control_On = Yes;
        Control_On_Int = 0;
        Control_On_Long = 0;
        Control_On_Double = 0.0;
        Control_On_String = "";
        Control_Off = No;
        Control_Off_Int = 0;
        Control_Off_Long = 0;
        Control_Off_Double = 0.0;
        Control_Off_String = "";
        Toggle_Button_On = Yes;
        Slider_Range_Max = 10;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 0.1;
        Slider_Value = "10";
        Shortcut_Key = "";
    }
}


//-------------------------------------------------------
// Space Initial Value Definition Divsion
//-------------------------------------------------------
Space_Initial {
}


//-------------------------------------------------------
// Other Miscellaneous Data Definition Division
//-------------------------------------------------------
Others_Data {
    Indent = 4;
    Rule_Colored = Yes;
    Rule_LineNo = Yes;
    Window_Hide_Run = 1;
    Debug_Position_x = 75;
    Debug_Position_y = 75;
    Debug_Size_x = 400;
    Debug_Size_y = 200;
    Console_Position_x = 219;
    Console_Position_y = 211;
    Console_Size_x = 600;
    Console_Size_y = 452;
    Componen_Tree_Position_x = 2;
    Componen_Tree_Position_y = 0;
    Componen_Tree_Size_x = 250;
    Componen_Tree_Size_y = 400;
    Console_Background_Color = 16777215;
    Console_Foreground_Color = 255;
    Console_DisplayLines_Max = 500;
    plug_in_module_name = "";
    Font_Name = "Dialog";
    Font_Char_Set = 0;
    Font_Size = 14.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 0, 0, 0;
}


//-------------------------------------------------------
// Network Information Definition Division
//-------------------------------------------------------
Network_Info {
    Global_Space_Area = 0, 0, 100, 100;
    Local_Space_Info {
    }
}


//-------------------------------------------------------
// Window Location Definition Division
//-------------------------------------------------------
Window_Rectangle {
    Window_Name = Main_Window, -8, -8, 1936, 1056;
    Window_Name = Output_Setting_Window, 551, 249, 480, 350;
    Window_Name = Artisoc_Help_Window, 10, 10, 400, 300;
}


//-------------------------------------------------------
// Help Favorite Division
//-------------------------------------------------------
Help_Favorite {
}


//-------------------------------------------------------
// Model Description Division
//-------------------------------------------------------
Model_Description {
    Universe {
        Function Univ_Init {
        }
        Function Univ_Step_Begin {
        }
        Function Univ_Step_End {
        }
        Function Univ_Finish {
        }
        Function nextsim {
        }
        Function initialize {
        }
    }
    Space Universe.Road {
    }
    Agent Universe.Road.Car {
        Function Agt_Init {
        }
        Function Agt_Step {
        }
        Function driveforward {
        }
        Function report {
        }
        Function reportStop {
        }
        Function reinitialize {
        }
        Function lookaround {
        }
    }
    Agent Universe.Road.Stoplight {
        Function Agt_Init {
        }
        Function Agt_Step {
        }
    }
}
